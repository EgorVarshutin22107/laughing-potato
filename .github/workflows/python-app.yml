name: Python application

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pygame coverage

    - name: Run tests with coverage
      run: |
        coverage run -m pytest app/test_main.py
        coverage xml
        coverage report

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.xml


  sonarcloud-check:
    needs: build
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.6.1.2450 # Find the latest version in the "Linux" link on this page:
                                        # https://sonarcloud.io/documentation/analysis/scan/sonarscanner/
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Download and set up SonarScanner and Build Wrapper
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        unzip sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        export PATH=$PATH:$(pwd)/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin
        wget https://binaries.sonarsource.com/Distribution/build-wrapper-linux-x86/build-wrapper-linux-x86.zip
        unzip build-wrapper-linux-x86.zip
        export PATH=$PATH:$(pwd)/build-wrapper-linux-x86

    - name: Set up Python 3.8 for gcovr
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install gcovr 5.0
      run: |
        pip install gcovr==5.0

    - name: Run build-wrapper
      run: |
        build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make

    - name: Run tests to generate coverage statistics
      run: |
        pytest app/test_main.py

    - name: Collect coverage into one XML report
      run: |
        gcovr --sonarqube > coverage.xml

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Put the name of your token here
      run: |
        sonar-scanner \
          -Dsonar.projectKey=<Your_SonarCloud_Project_Key> \
          -Dsonar.organization=<Your_SonarCloud_Organization> \
          -Dsonar.host.url=${{ env.SONAR_SERVER_URL }} \
          -Dsonar.login=${{ env.SONAR_TOKEN }} \
          -Dsonar.cfamily.build-wrapper-output=${{ env.BUILD_WRAPPER_OUT_DIR }} \
          -Dsonar.coverageReportPaths=coverage.xml